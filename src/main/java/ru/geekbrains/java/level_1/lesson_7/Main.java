package ru.geekbrains.java.level_1.lesson_7;

import ru.geekbrains.java.level_1.lesson_6.Animal;
import ru.geekbrains.java.level_1.lesson_6.Dog;

import java.util.Arrays;

public class Main {

    /**
     *
     * Как видите, теперь мы можем взять любой объект класса Кот и «попросить» его покушать из любого объекта класса Тарелка с помощью строки вида cat.eat(plate).
     * То есть можно заставить каждого кота кушать из своей миски или взять много котов и заставить кушать из общей.
     * В текущей реализации есть несколько вопросов, которые необходимо решить, но они оставлены на самостоятельное выполнение в качестве домашнего задания.
     *
     * 1. Расширить задачу про котов и тарелки с едой (в методичке)
     * 2. Сделать так, чтобы в тарелке с едой не могло получиться отрицательного количества еды (например, в миске 10 еды, а кот пытается покушать 15-20)
     * 3. Каждому коту нужно добавить поле сытость (когда создаем котов, они голодны). Если коту удалось покушать (хватило еды), сытость = true
     * 4. Считаем, что если коту мало еды в тарелке, то он ее просто не трогает, то есть не может быть наполовину сыт (это сделано для упрощения логики программы)
     * 5. Создать массив котов и тарелку с едой, попросить всех котов покушать из этой тарелки и потом вывести информацию о сытости котов в консоль
     * 6. Добавить в тарелку метод, с помощью которого можно было бы добавлять еду в тарелку
     *
     * */

    public static void main(String[] args) {

        Plate plate = new Plate(30);
        Cat[] cats = new Cat[] {
                new Cat("Пушок"),
                new Cat("Барсик"),
                new Cat("Маркиз"),
                new Cat("Мурзик"),
                new Cat("Рыжик"),
                new Cat("Снежинка")
        };

        System.out.println("Информация по котятам:");
        Arrays.stream(cats).forEach(cat -> cat.info());
        System.out.println();

        System.out.println("Начинаем прием пищи:");
        for (Cat cat: cats) {
            if ( !cat.isFullness() ) {
                cat.eat(plate);
                plate.info();

                // Если не хватило еды в тарелке
                if ( !cat.isFullness() ) {
                    plate.setFood(cat.getAppetite()-plate.getFood());
                    cat.eat(plate);
                    plate.info();
                }

                System.out.println();
            }

        }

    }

}
